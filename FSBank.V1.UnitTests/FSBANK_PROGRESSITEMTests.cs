//C# bindings for FSBank generated by ClangSharp
//https://github.com/dotnet/ClangSharp
//
//FSBank is part of FMOD Studio, copyright Â© Firelight Technologies Pty, Ltd., 1994-2016.
//See FMOD_LICENSE.txt for full license terms and conditions.

using NUnit.Framework;
using System;
using System.Runtime.InteropServices;

namespace FSBank.V1.UnitTests;

/// <summary>Provides validation of the <see cref="FSBANK_PROGRESSITEM" /> struct.</summary>
public static unsafe partial class FSBANK_PROGRESSITEMTests
{
    /// <summary>Validates that the <see cref="FSBANK_PROGRESSITEM" /> struct is blittable.</summary>
    [Test]
    public static void IsBlittableTest()
    {
        Assert.That(Marshal.SizeOf<FSBANK_PROGRESSITEM>(), Is.EqualTo(sizeof(FSBANK_PROGRESSITEM)));
    }

    /// <summary>Validates that the <see cref="FSBANK_PROGRESSITEM" /> struct has the right <see cref="LayoutKind" />.</summary>
    [Test]
    public static void IsLayoutSequentialTest()
    {
        Assert.That(typeof(FSBANK_PROGRESSITEM).IsLayoutSequential, Is.True);
    }

    /// <summary>Validates that the <see cref="FSBANK_PROGRESSITEM" /> struct has the correct size.</summary>
    [Test]
    public static void SizeOfTest()
    {
        if (Environment.Is64BitProcess)
        {
            Assert.That(sizeof(FSBANK_PROGRESSITEM), Is.EqualTo(24));
        }
        else
        {
            Assert.That(sizeof(FSBANK_PROGRESSITEM), Is.EqualTo(16));
        }
    }
}
